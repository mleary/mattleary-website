[
  {
    "objectID": "resources/resources-notes.html",
    "href": "resources/resources-notes.html",
    "title": "matt_leary",
    "section": "",
    "text": "A simple place to notes on data related “things."
  },
  {
    "objectID": "resources/resources-notes.html#data-notes",
    "href": "resources/resources-notes.html#data-notes",
    "title": "matt_leary",
    "section": "",
    "text": "A simple place to notes on data related “things."
  },
  {
    "objectID": "resources/resources-links.html",
    "href": "resources/resources-links.html",
    "title": "matt_leary",
    "section": "",
    "text": "A simple place to store articles & materials I find helpful.\n\n\n\nSam Csik blog - great format I used for inspriation and ideas\nBea Milz website I reviewed for ideas and code snippets\n\n\n\n\n\nJulia Silge blogpost on tidymodels package\n\nGreat, concise example of using tidymodels"
  },
  {
    "objectID": "resources/resources-links.html#helpful-links",
    "href": "resources/resources-links.html#helpful-links",
    "title": "matt_leary",
    "section": "",
    "text": "A simple place to store articles & materials I find helpful.\n\n\n\nSam Csik blog - great format I used for inspriation and ideas\nBea Milz website I reviewed for ideas and code snippets\n\n\n\n\n\nJulia Silge blogpost on tidymodels package\n\nGreat, concise example of using tidymodels"
  },
  {
    "objectID": "posts/2024-02-11_openai-image-generation/index.html",
    "href": "posts/2024-02-11_openai-image-generation/index.html",
    "title": "Exploring image generation with DALL-E",
    "section": "",
    "text": "Admittedly, I am late to exploring image generation with DALL-E. But as they say, better late then never! I wanted to quickly post on some recent exploration using Open AI’s DALL-E. I won’t go into how DALL-E works, but OpenAI describes it as AI system that can create realistic images and art from a description in natural language. You can learn more about here.\nI had a section of my website for data notes, to capture useful code snippets, new packages, or just tools/techniques I haven’t used much. I saw a similar idea on someone elses blog and thought it was a great idea. That said, I have yet to populate it with anything.\nSo for the short term, I figured why not create an image of bear saying something like “Please BEAR with us” to announce the site was under construction. A very normal and commonsense idea in my eyes."
  },
  {
    "objectID": "posts/2024-02-11_openai-image-generation/index.html#background-on-the-idea",
    "href": "posts/2024-02-11_openai-image-generation/index.html#background-on-the-idea",
    "title": "Exploring image generation with DALL-E",
    "section": "",
    "text": "Admittedly, I am late to exploring image generation with DALL-E. But as they say, better late then never! I wanted to quickly post on some recent exploration using Open AI’s DALL-E. I won’t go into how DALL-E works, but OpenAI describes it as AI system that can create realistic images and art from a description in natural language. You can learn more about here.\nI had a section of my website for data notes, to capture useful code snippets, new packages, or just tools/techniques I haven’t used much. I saw a similar idea on someone elses blog and thought it was a great idea. That said, I have yet to populate it with anything.\nSo for the short term, I figured why not create an image of bear saying something like “Please BEAR with us” to announce the site was under construction. A very normal and commonsense idea in my eyes."
  },
  {
    "objectID": "posts/2024-02-11_openai-image-generation/index.html#using-open-ai-for-image-generation",
    "href": "posts/2024-02-11_openai-image-generation/index.html#using-open-ai-for-image-generation",
    "title": "Exploring image generation with DALL-E",
    "section": "Using Open AI for image generation",
    "text": "Using Open AI for image generation\nAs I expected, it was incredibly easy to use the Open AI api with just a few lines of code. Each each call only cost a few pennies (I saw 3-4 cents per image) and took 5-10 seconds to return a response. So overall, very inexpensive and quick to iterate with new different images.\nI started with a vague prompt about a bear saying “please bear with me”, and slowly refined it.\n\n\nhide / show code\nfrom openai import OpenAI\nimport os\nfrom secret_keys import OPENAI_KEY\n\nclient = OpenAI(api_key=OPENAI_KEY)\n\nresponse = client.images.generate(\n  model=\"dall-e-3\",\n  prompt=\"I want a picture of a bear in construction gear sitting at a computer typing code.  I want a message at the top of the image that says 'Please BEAR with us, this site is under construction. The idea is for this to be cartoonish and funny!  Please add this exact phrase at the bottom 'Created with DALL-E'\",\n  size=\"1024x1024\",\n  quality=\"standard\",\n  n=1,\n)\n\nimage_url = response.data[0].url\nimage_url \n\n\n'https://oaidalleapiprodscus.blob.core.windows.net/private/org-QwvrbKaSi0VeflwsDx1dYz8t/user-xeCmfMW6XAJBDsWzkXkIRsNp/img-2xf5B8J4ZbuylSvNHcSRPInx.png?st=2024-02-17T18%3A19%3A44Z&se=2024-02-17T20%3A19%3A44Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2024-02-17T18%3A56%3A39Z&ske=2024-02-18T18%3A56%3A39Z&sks=b&skv=2021-08-06&sig=ldgus5CfsRP6VGOW75XUf%2B2IiRF7C8e7wCXEYp3hFUY%3D'\n\n\nAnd just like that, you have a url where you can view the generated image and download it locally. A few things to note that I found interesting:\n\nAs of February 2024, the image will stay up for one hour per the DALL-E documentation.\nYou’ll notice that while the image outputs are impressive, the text generation was surprisingly bad. Even with direct prompts to include a specific saying, it often got the phrase wrong, misspelled words or even made up words. Some quick research confirmed it’s a common occurrence. I read some explanations for why, but I did not go deep enough to confirm exactly why. I am interested to read more on that."
  },
  {
    "objectID": "posts/2024-01-31_updating-recipes-initial/index.html",
    "href": "posts/2024-01-31_updating-recipes-initial/index.html",
    "title": "A Recipe for change",
    "section": "",
    "text": "Hey folks,\nLong time no blog, right? Well, guess what got me back into the keyboard clacking game? A combo of needing a push and stumbling onto a pretty cool project. So, here I am, ready to spill the beans on my latest coding escapade.\nConfession time: I’ve got this not-so-great habit. I cook up these awesome meals for the fam, and then, poof! Forget how to recreate the magic. It’s like culinary amnesia. Ever been there?\nSo, a while back, I threw together this simple thing to track recipes, just to keep my kitchen capers in check. Fast forward, and it’s become this cool project that’s dragging me back to blogging – in a good way.\nStay tuned for the full scoop on how I’m leveling up my recipe game, avoiding the “What was in that again?” moments, and diving into a bit of tech fun. Quarto, Google Sheets, OpenAI magic – it’s all in the mix.\nCatch you in the next post!\nCheers, [Your First Name]"
  },
  {
    "objectID": "posts/2024-01-31_updating-recipes-initial/index.html#a-chatgpt-intro",
    "href": "posts/2024-01-31_updating-recipes-initial/index.html#a-chatgpt-intro",
    "title": "A Recipe for change",
    "section": "",
    "text": "Hey folks,\nLong time no blog, right? Well, guess what got me back into the keyboard clacking game? A combo of needing a push and stumbling onto a pretty cool project. So, here I am, ready to spill the beans on my latest coding escapade.\nConfession time: I’ve got this not-so-great habit. I cook up these awesome meals for the fam, and then, poof! Forget how to recreate the magic. It’s like culinary amnesia. Ever been there?\nSo, a while back, I threw together this simple thing to track recipes, just to keep my kitchen capers in check. Fast forward, and it’s become this cool project that’s dragging me back to blogging – in a good way.\nStay tuned for the full scoop on how I’m leveling up my recipe game, avoiding the “What was in that again?” moments, and diving into a bit of tech fun. Quarto, Google Sheets, OpenAI magic – it’s all in the mix.\nCatch you in the next post!\nCheers, [Your First Name]"
  },
  {
    "objectID": "posts/2024-01-31_updating-recipes-initial/index.html#a-new-project-migrating-to-quarto-and-exploring-openai",
    "href": "posts/2024-01-31_updating-recipes-initial/index.html#a-new-project-migrating-to-quarto-and-exploring-openai",
    "title": "A Recipe for change",
    "section": "A new project, migrating to Quarto and exploring OpenAI",
    "text": "A new project, migrating to Quarto and exploring OpenAI\nFirst, I had to include the above ChatGPT blog write-up once I read the lines “got me back into the keyboard clacking game” and “It’s like culinary amnesia”. That was just too great not to share. I am excited to kick-off a multiple-stage project leveraging Quarto, Github Actions, OpenAI, and a few other tools. So in case the above ChatGPT summary wasn’t clear, I will give a quick summary.\nYears ago, I started a simple personal website to save recipes my family liked. I would never remember which recipe I had used and then would scramble to try and find them again. I setup a simple process leveraging {rmarkdown}, a csv of data, and Github Actions. Fast forward a few years of not updating that process, and I started to get some security warnings from the old code base. At that point, I decided it was time to move the basic recipe website to my personal website (here) and that meant converting it to a new format you can find here.\n\nInitial Setup\nMy initial focus was just moving the old recipe website to my existing Quarto personal website. I wanted to keep the first iteration simple so I focused on :\n\nInstead of saving the data in a csv file in the repo, I moved the data to a Google Sheets page and accessed it with the {googlesheets4} package\nI upgraded the presentation from a basic table to a “fancier” one leveraging {gt} and {gtExtras}\nI added the new webpage as a drop down section in my existing personal website.\n\n\n\nFuture plans\nThis was just an initial start, focusing on the basic need to move the existing website. I have a few follow-on ideas I want to explore.\n\nLeveraging OpenAI to summarize cooking websites\nExploring GitHub actions to update the recipes page whenever I update the Google Sheets with recipe data\n\nThis would be a good chance to test using secrets with GitHub actions, something I have not done\n\nFigure out how to make a series of posts with Quarto blog\n\nSo a simple first step but I am looking forward to exploring GitHub actions and OpenAI in the coming weeks!"
  },
  {
    "objectID": "posts/2023-07-07_moving-to-quarto/index.html",
    "href": "posts/2023-07-07_moving-to-quarto/index.html",
    "title": "Moving to a Quarto website",
    "section": "",
    "text": "After many months (years?) of not really touching my personal website, I am working to update my website and truly delve into using quarto for analysis and publication. This initial post will be a short summary of my efforts to get started, document some of the resources I found and used, and a starting point for what will *hopefully* become a regularly updated post.\n\nLessons learned\n\nI had an existing template, after a few hours I was able to follow blogs by Sam Csik and Bea Milz to help me create a seperate posts section, add a footer, and generally make some customizations I really liked.\n\nSam Csik blog\nBea Milz website I reviewed for ideas and code snippets\n\nUsing a custom domain is relatively simple, but it took some configuring to get it right.\n\nGithub docs\n\nUsed the section entitled Configuring an apex domain\n\nRandom YouTube video that helped visual the process\n\nRealized I might want to setup a Github Actions workflow instead of rendering locally. Not sure on that yet.\nBring over old .Rmd files used in my previous {blogdown} format was clunky\n\nNot sure if it was simply a copy paste issue, but I took an old post and tried to move it over. Quarto seemed to have some new syntax and it proved to be a little bit of a hassle. Again, this might have been user error on the first go round but I might just focus on starting fresh moving forward.\n\nConsolidating\n\nI have created several other websites with Github. Debating if I want to link to those, move that content into this website, or refactor those as quarto webpages."
  },
  {
    "objectID": "posts/2024-03-30_recipes_getting_instructions/index.html",
    "href": "posts/2024-03-30_recipes_getting_instructions/index.html",
    "title": "A Recipe for change - OpenAI as a sous chef",
    "section": "",
    "text": "I initially wanted to use OpenAI to summarize cooking recipes I found online, but that presented some issues with permissions and webscraping. So instead, I pivoted and created a ‘new’ recipe with OpenAI directly. This also helps address a common issue I faced, which was remembering which online recipe we previously used.\nFirst thing up on my list was a recipe for healthy banana bread that my kids would enjoy. So my goal for this exercise was:\n\nUse OpenAI to generate the recipe and ingredients list, in a specific format\n\nFor this I used the GPT-4 model via the OpenAI API\n\nUse the generated recipe to make banana bread with my two daughters (Nora and Tess)\nUse OpenAI to generate an images of us making the recipe.\n\nSide Note: If you haven’t explored the world of prompt engineering with a 3.5 and 5.5 year old, I can’t explain the strange requests you might get. Also, I can’t say 3 and 5 year old, because the half year is apparently very important.\n\n\nI hope you enjoy the recipe and the images, it was a lot of fun for us to work on it together! I’ll walk through some of the prompt engineering we explored along the way.\n\nSetting up the system and role prompts\nFirst step, we need to set up the system and user prompts that will control what we ask for and get back from OpenAI. I won’t go into depth on this topic here, but basically the the system prompt defines HOW the the AI model should respond, and the user prompt defines WHAT we are asking the AI model to do.\nIn this case, I am giving the AI model the role of a culinary expert who specializes in creating simple but delicious meals. The user prompt is a request for a recipe for healthy banana bread that kids will enjoy eating, with a preference for using sugar alternatives like honey or maple syrup.\n\nOur system prompt is as follows:\n\n\"You are a culinary expert who specializes in creating simple but delicious meals.  You will output a quick summary of the meal in a json format contain two key value pairs.  First, a key \"ingredients\" which has the list of ingredients. Second, a key \"steps\", which has a step-by-step process for cooking the meal. The preference is to create meals with common ingredients and as few as ingredients as needed.\"\n\n\n\nOur user prompt is as follows:\n\n\"I need a recipe for healthy banana bread, one that kids will enjoy eating.  I prefer to use sugar alternatives as much as possible, such as honey or maple syrup.\"\n\n\n\nhide / show code\nrole_system = '''\n\"You are a culinary expert who specializes in creating simple but delicious meals.  You will output a quick summary of the meal in a json format contain two key value pairs.  First, a key \"ingredients\" which has the list of ingredients. Second, a key \"steps\", which has a step-by-step process for cooking the meal. The preference is to create meals with common ingredients and as few as ingredients as needed.\"\n'''\n\nrole_user =\"I need a recipe for healthy banana bread, one that kids will enjoy eating.  I prefer to use sugar alternatives as much as possible, such as honey or maple syrup.\"\n\n\n\n\n\nUsing OpenAI to generate recipe and ingredients list\nNow that we have our system and user prompts set up, we can use OpenAI to generate the recipe and ingredients list for healthy banana bread. We will pass in the system and user prompts to the OpenAI API and get back a response with the generated data. We will then extract the data from the response and convert it into a Python object that we can work with.\n\nNote: I didn’t want to continually rerun the OPENAI API call, so I saved the result. This code doesn’t actually run now and I just open up the saved json file.\n\n\n\nhide / show code\nfrom openai import OpenAI\nimport os\nfrom secret_keys import OPENAI_KEY\nimport json\n\n# Create a completion with the OpenAI API\nclient = OpenAI(api_key=OPENAI_KEY)\n\ncompletion = client.chat.completions.create(\n  model=\"gpt-4-0125-preview\",\n  response_format={ \"type\": \"json_object\" },\n  messages=[\n    {\"role\": \"system\", \"content\": role_system},\n    {\"role\": \"user\", \"content\": role_user}\n  ]\n)\n\n# Extract the generated data from the completion object\nresponse_data = completion.choices[0].message.content\n\n# Convert the JSON string into a Python object\ndata_dict = json.loads(response_data)\n\n#with open('data.json', 'w') as file:\n#    json.dump(data_dict, file)\n\n# Load the data from the saved file - I commented out the generation code above\nwith open('./data.json', 'r') as file:\n  data_dict = json.load(file)\n\n# extract the ingredients and steps from the data\ningredients = data_dict['ingredients']\ningredients_list = \"\\n\".join(f\"- {ingredient}\" for ingredient in ingredients)\n\nsteps = data_dict['steps']\nsteps_list = \"\\n\".join(f\"- {step}\" for step in steps)\n\n\nAnd now we have the recipe and ingredients list for healthy banana bread that kids will enjoy eating. Let’s take a look at the ingredients and recipe steps.\n\n\nThe Ingredients we need\n\n\nhide / show code\nimport json # need to import this since above code chunk does not execute\n\n# Load the data from the saved file - I commented out the generation code in the above code chunk\nwith open('./data.json', 'r') as file:\n  data_dict = json.load(file)\n\n# extract the ingredients and steps from the data\ningredients = data_dict['ingredients']\ningredients_list = \"\\n\".join(f\"- {ingredient}\" for ingredient in ingredients)\n\n\nprint(ingredients_list)\n\n\n- 3 ripe bananas\n- 1/3 cup melted coconut oil\n- 1/2 cup honey or maple syrup\n- 2 eggs\n- 1 teaspoon vanilla extract\n- 1/4 cup milk or a milk alternative\n- 1 teaspoon baking soda\n- 1/2 teaspoon salt\n- 1/2 teaspoon cinnamon\n- 1 3/4 cups whole wheat flour\n- Optional: 1/2 cup mix-ins such as chopped nuts, chocolate chips, or dried fruit\n\n\n\n\nThe Recipe instructions\n\n\nhide / show code\nsteps = data_dict['steps']\nsteps_list = \"\\n\".join(f\"- {step}\" for step in steps)\n\nprint(steps_list)\n\n\n- Preheat your oven to 325°F (165°C) and grease a 9x5-inch loaf pan.\n- In a large bowl, mash the ripe bananas with a fork until completely smooth. Stir the melted coconut oil into the mashed bananas.\n- Mix in the honey or maple syrup, beaten eggs, and vanilla extract. Then mix in the milk.\n- Add the baking soda, salt, and cinnamon, and stir into the batter. Lastly, mix in the flour, just until combined. If you're adding any mix-ins, gently fold them in now.\n- Pour the batter into your greased loaf pan and sprinkle a little cinnamon on top for extra flavor.\n- Bake for 55 to 60 minutes, or until a toothpick inserted into the center comes out clean. Let the bread cool in the pan for a few minutes, then transfer it to a wire rack to cool completely before slicing.\n- Enjoy your healthy banana bread as is, or toast slices and serve with a spread of nut butter for an extra protein boost.\n\n\n\n\nMaking the Recipe\nWe took those ingredients and recipe steps and made the recipe with my two daughters. Following the suggested process the result was as good as any store bought mixes or recipes we have found online!\n\n\nThe Image Generation\nAfter we made the recipe, we used OpenAI’s DALL-E to generate an image of the recipe being made. We used the following prompt to generate the image, courtesy of Nora::\n\n\"I want a cartoon image of a a father and his two daughters in their kitchen putting a dish into the oven with the healthy banana bread batter they just made.  The two daughter are Nora and Tess, Nora is wearing a sparkly dress and Tess is wearing  paw patrol shirt with pink pants.\"\n\n\n\nhide / show code\nfrom openai import OpenAI\nimport os\n#from secret_keys import OPENAI_KEY\n\nclient = OpenAI(api_key=OPENAI_KEY)\n\nresponse = client.images.generate(\n  model=\"dall-e-3\",\n  prompt= 'I want a cartoon image of a a father and his two daughters  in their kitchen putting a dish into the oven with the healthy banana bread batter they just made.  The two daughter are Nora and Tess, Nora is wearing a sparkly dress and Tess is wearing  paw patrol shirt with pink pants.' ,\n  size=\"1024x1024\",\n  quality=\"standard\",\n  n=1,\n)\n\nimage_url = response.data[0].url  \n\n\n\nNora’s Image\nI used Nora’s prompt as image for this article.\n\n\n\nMy image\nI also create an image, but lost the prompt. It included me wearing Tottenham Hotspur gear is the main thing I remember.\n\n\n\n\nTotal cost of exploration\nLooking back, the total cost to generate the recipe and images was about $0.57. That includes multiple attempts refining my process to request the recipe and ingredients and generating 5 images with DALL-E. I think that is a pretty good deal for a fun afternoon with my daughters. I hope you enjoyed the recipe and images as much as we did!"
  },
  {
    "objectID": "posts/2023-07-08_resume_pagedown/index.html",
    "href": "posts/2023-07-08_resume_pagedown/index.html",
    "title": "Generating my resume with {pagedown}",
    "section": "",
    "text": "I took an old post generated on my previous {blogdown} website and ported it over to quarto. I made slight updates to line it up with current format, but otherwise tried to just reuse the old material found here.\n\nYihui Xie & Romain Lesur’s {pagedown} package allows users to create paged HTML documents that can be easily printed as PDFs. This includes RMarkdown templates that let you create letters, business cards, and most importantly resumes. I previously explored using {pagedown} for my resume and was impressed with the unique look it provided. That said, I never actually finished my exploration and I recently wanted to go back to {pagedown} and create a new resume."
  },
  {
    "objectID": "posts/2023-07-08_resume_pagedown/index.html#refreshing-an-old-post",
    "href": "posts/2023-07-08_resume_pagedown/index.html#refreshing-an-old-post",
    "title": "Generating my resume with {pagedown}",
    "section": "",
    "text": "I took an old post generated on my previous {blogdown} website and ported it over to quarto. I made slight updates to line it up with current format, but otherwise tried to just reuse the old material found here.\n\nYihui Xie & Romain Lesur’s {pagedown} package allows users to create paged HTML documents that can be easily printed as PDFs. This includes RMarkdown templates that let you create letters, business cards, and most importantly resumes. I previously explored using {pagedown} for my resume and was impressed with the unique look it provided. That said, I never actually finished my exploration and I recently wanted to go back to {pagedown} and create a new resume."
  },
  {
    "objectID": "posts/2023-07-08_resume_pagedown/index.html#intent",
    "href": "posts/2023-07-08_resume_pagedown/index.html#intent",
    "title": "Generating my resume with {pagedown}",
    "section": "Intent",
    "text": "Intent\nI had four main goals with this project:\n\nCreate a resume format that was unique but not overly “flashy”\nModify pagedown’s base styling to work on my understanding of CSS\nCreate two versions, an HTML document for the web and a basic pdf for printing\nDevelop a process that made it easy to update my resume periodically (see the repo here)\n\n**Acknowledgement: Shout out to Nick Strayer, whose code was the basis for my format. I heavily borrowed from his code and approach. See his resume here"
  },
  {
    "objectID": "posts/2023-07-08_resume_pagedown/index.html#creating-my-custom-resume",
    "href": "posts/2023-07-08_resume_pagedown/index.html#creating-my-custom-resume",
    "title": "Generating my resume with {pagedown}",
    "section": "Creating my custom resume",
    "text": "Creating my custom resume\nAfter some quick research on {pagedown} examples, I stumbled upon Nick Strayer’s resume. I liked the subtle changes he made to the base {pagedown::html_resume}, and decided to leverage his format & approach. For example, I really liked his use of “skill bars” to highlight his coding experience.\n\nlibrary(tidyverse)\n\nresume_data &lt;- readr::read_csv('https://raw.githubusercontent.com/mleary/resume/main/data/skill_data.csv')\n\ndevtools::source_url(\"https://raw.githubusercontent.com/mleary/resume/master/helper_functions.R\")\n\nbuild_skill_bars(resume_data, \"Tech\")"
  },
  {
    "objectID": "posts/2023-07-08_resume_pagedown/index.html#main-efforts",
    "href": "posts/2023-07-08_resume_pagedown/index.html#main-efforts",
    "title": "Generating my resume with {pagedown}",
    "section": "Main efforts",
    "text": "Main efforts\nHere some of my major steps I took to fully leverage {pagedown} resume template.\n\nUpdating the CSS\nWith limited CSS experience, this step took the longest as I explored CSS syntax and the resulting output. I’ll ignore the actual CSS code and the changes I made, but the process of adding a custom CSS file was simple. First, create a .css file with the changes you want to make. After that, add a few lines of code to the YAML header of the markdown template (seen below).\n\noutput:\n\npagedown::html_resume:\n\ncss: \\['css/custom_resume.css', 'css/styles_html.css', 'resume'\\]\nNote that with this setup, the base CSS template is still used but is overwritten by my custom CSS files. I also created a css folder to house the files, which appeared to be a best practice.\n\n\nCreating an Excel file for data\nRather than hard coding my work and education experience in the Markdown document, I liked the approach of creating a separate excel file with all the necessary data for my resume. This way it is easier to update my experience and in theory I could use that file to populate different resume versions, websites, etc..\n\n\nProducing multiple versions\nI wanted to create two different versions of my resume, one with color and a plain version for easier printing. That said, I did not want to maintain to separate RMarkdown documents since that would require me to update TWO documents to ensure they were both always up to date. While this wouldn’t be an overwhelming burden, I also suspected it would lead to two versions with minor differences.\nUsing the render function from the **rmarkdown** package, I was able to easily update both versions at the same time. With this function, you can take an rmarkdown file and control some of the output settings. For example, I was able to control the output file name, the css settings, and any individual parameter settings used in the YAML settings.\n\nrmarkdown::render(input = \"resume.Rmd\",\n  output_file = \"index.html\",\n  output_options = list(css = c('css/custom_resume.css', 'css/styles_html.css', 'resume'),\n  self_contained = FALSE\n  ),\n  params = list(doctype = \"HTML\")\n)\n\nrmarkdown::render(input = \"resume.Rmd\",\n  output_file = \"mleary_resume.html\",\n  output_options = list(\n    css = c('css/custom_resume.css', 'css/styles_pdf.css', 'resume')\n  ),\n  params = list(doctype = \"PDF\")\n)\nThis was really helpful to learn for future projects. Saving the output as a different name is something that could helpful in other circumstances. For routine reports that might be ran periodically, it would be helpful to use this function to save the output with the current date. Another use case would be to create template format and than create multiple outputs for a list of items using the **purrr** package."
  },
  {
    "objectID": "posts/2023-07-08_resume_pagedown/index.html#lessons-learned",
    "href": "posts/2023-07-08_resume_pagedown/index.html#lessons-learned",
    "title": "Generating my resume with {pagedown}",
    "section": "Lessons Learned",
    "text": "Lessons Learned\nThe process was relatively straightforward and lead to learning several new R tips that could be applied elsewhere. My major takeaways are listed below.\n* Google is your friend. The {pagedown} documentation was great, but finding Nick’s example really helped me develop a resume I liked.\n* Rmarkdown is awesome. I already thought this, but a simple trick like rendering an existing Rmarkdown with specific parameters means I can know do even more with the package.\n* CSS styling is nuanced, but it also adds a lot. I am not a CSS expert, but with some simple research and a LOT of experimentation I was able to quickly make changes. I’ve used CSS to create a custom {rmarkdown} template at work, and that little addition really makes the report stand out."
  },
  {
    "objectID": "resources/resources-cooking.html",
    "href": "resources/resources-cooking.html",
    "title": "matt_leary",
    "section": "",
    "text": "I am terrible at saving / remembering which recipes we have used and liked. My spouse has grown tired of me asking for the link to the same recipe again and again.\nThis is a quick attempt to save cooking recipes to a simple website I can control. And on the plus side, versus saving links in a browser or Notepad, this means I can access the recipes from anywhere.\n\n\nShow the code\nlibrary(googlesheets4)\nlibrary(gt)\nlibrary(dplyr)\nlibrary(gtExtras)\nlibrary(fontawesome)\n\nfontawesome::fa_html_dependency()\n## List of 10\n##  $ name      : chr \"font-awesome\"\n##  $ version   : chr \"6.4.0\"\n##  $ src       :List of 1\n##   ..$ file: chr \"fontawesome\"\n##  $ meta      : NULL\n##  $ script    : NULL\n##  $ stylesheet: chr [1:2] \"css/all.min.css\" \"css/v4-shims.min.css\"\n##  $ head      : NULL\n##  $ attachment: NULL\n##  $ package   : chr \"fontawesome\"\n##  $ all_files : logi TRUE\n##  - attr(*, \"class\")= chr \"html_dependency\"\n\n# Only need to use this when setting it up for the first time on a computer\n#gs4_auth()\n\ngoogle_sheets_path &lt;- 'https://docs.google.com/spreadsheets/d/10cvArLbAus_PMVRZfFh6z8MEQE2OWnzIMIVTSV-WR5c/edit?usp=sharing'\nsheet &lt;- read_sheet(google_sheets_path)\n\nsheet &lt;- sheet %&gt;%\n  mutate(Recipe = paste0(\"[\", Recipe, \"](\", Website, \")\")) %&gt;%\n  select(-Website)\n\ngt_table &lt;- gt(sheet) %&gt;%\n  tab_header('Recipes we like')  %&gt;%\n  cols_width(\n    Recipe ~ pct(25),\n    `Kids Rating` ~ pct(20),\n    `Adult Rating` ~ pct(20),\n    Notes ~ pct(35)\n  ) %&gt;%\n  fmt_markdown(columns = c(Recipe))  %&gt;%\n  gtExtras::gt_fa_rating(`Kids Rating`, icon='thumbs-up', color = 'red') %&gt;%\n  gtExtras::gt_fa_rating(`Adult Rating`, icon='thumbs-up', color = 'blue')%&gt;%\n  gtExtras::gt_theme_espn()\n\n\ngt_table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRecipes we like\n\n\nRecipe\nKids Rating\nAdult Rating\nNotes\n\n\n\n\nGnocchi dish (bacon | brocollu | brussel sprouts)\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM likes\n\n\nHoney Garlic Shrimp\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM likes\n\n\nBalsamic pork tenderloin\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nwe eat this a lot\n\n\nHealthy Pumpkin Bread\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nfor kids\n\n\nEgg casserole\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\none with bread crumbs in it\n\n\nBeef Stew\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nlook at comments - add tomato paste and others\n\n\nSweet potato and beef skillet\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nam likes and simple\n\n\nKorean beef & quinoa\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nadded steam brocoli\n\n\nBeef bolognese sauce\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nI like this one - add mushrooms & tomato paste\n\n\nMussels in a red sauce\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nLiked this one - but made changes. Went lite on white wine (sauvignon blanc first time)\n\n\nShakshuka\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM likes this dish a lot- can be used with cast iron as well\n\n\nPot roast\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\ngot this one from Dan - good to cook in the dutch oven\n\n\nRoasted Carrots\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM really liked - simple & good\n\n\nRoasted Tomatoes\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nreally liked these -tried variations with balsamic vinegar and spices"
  },
  {
    "objectID": "resources/resources-cooking.html#why-create-a-recipes-website",
    "href": "resources/resources-cooking.html#why-create-a-recipes-website",
    "title": "matt_leary",
    "section": "",
    "text": "I am terrible at saving / remembering which recipes we have used and liked. My spouse has grown tired of me asking for the link to the same recipe again and again.\nThis is a quick attempt to save cooking recipes to a simple website I can control. And on the plus side, versus saving links in a browser or Notepad, this means I can access the recipes from anywhere.\n\n\nShow the code\nlibrary(googlesheets4)\nlibrary(gt)\nlibrary(dplyr)\nlibrary(gtExtras)\nlibrary(fontawesome)\n\nfontawesome::fa_html_dependency()\n## List of 10\n##  $ name      : chr \"font-awesome\"\n##  $ version   : chr \"6.4.0\"\n##  $ src       :List of 1\n##   ..$ file: chr \"fontawesome\"\n##  $ meta      : NULL\n##  $ script    : NULL\n##  $ stylesheet: chr [1:2] \"css/all.min.css\" \"css/v4-shims.min.css\"\n##  $ head      : NULL\n##  $ attachment: NULL\n##  $ package   : chr \"fontawesome\"\n##  $ all_files : logi TRUE\n##  - attr(*, \"class\")= chr \"html_dependency\"\n\n# Only need to use this when setting it up for the first time on a computer\n#gs4_auth()\n\ngoogle_sheets_path &lt;- 'https://docs.google.com/spreadsheets/d/10cvArLbAus_PMVRZfFh6z8MEQE2OWnzIMIVTSV-WR5c/edit?usp=sharing'\nsheet &lt;- read_sheet(google_sheets_path)\n\nsheet &lt;- sheet %&gt;%\n  mutate(Recipe = paste0(\"[\", Recipe, \"](\", Website, \")\")) %&gt;%\n  select(-Website)\n\ngt_table &lt;- gt(sheet) %&gt;%\n  tab_header('Recipes we like')  %&gt;%\n  cols_width(\n    Recipe ~ pct(25),\n    `Kids Rating` ~ pct(20),\n    `Adult Rating` ~ pct(20),\n    Notes ~ pct(35)\n  ) %&gt;%\n  fmt_markdown(columns = c(Recipe))  %&gt;%\n  gtExtras::gt_fa_rating(`Kids Rating`, icon='thumbs-up', color = 'red') %&gt;%\n  gtExtras::gt_fa_rating(`Adult Rating`, icon='thumbs-up', color = 'blue')%&gt;%\n  gtExtras::gt_theme_espn()\n\n\ngt_table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRecipes we like\n\n\nRecipe\nKids Rating\nAdult Rating\nNotes\n\n\n\n\nGnocchi dish (bacon | brocollu | brussel sprouts)\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM likes\n\n\nHoney Garlic Shrimp\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM likes\n\n\nBalsamic pork tenderloin\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nwe eat this a lot\n\n\nHealthy Pumpkin Bread\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nfor kids\n\n\nEgg casserole\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\none with bread crumbs in it\n\n\nBeef Stew\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nlook at comments - add tomato paste and others\n\n\nSweet potato and beef skillet\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nam likes and simple\n\n\nKorean beef & quinoa\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nadded steam brocoli\n\n\nBeef bolognese sauce\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nI like this one - add mushrooms & tomato paste\n\n\nMussels in a red sauce\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nLiked this one - but made changes. Went lite on white wine (sauvignon blanc first time)\n\n\nShakshuka\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM likes this dish a lot- can be used with cast iron as well\n\n\nPot roast\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\ngot this one from Dan - good to cook in the dutch oven\n\n\nRoasted Carrots\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nAM really liked - simple & good\n\n\nRoasted Tomatoes\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\n\nThumbs Up\n\n\n\n\nreally liked these -tried variations with balsamic vinegar and spices"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "matt_leary",
    "section": "",
    "text": "Hi!\nI am a data scientist working in the insurance industry and I enjoy building tools that help people work more efficiently. I work regularly with R and Python, but R will always be my preferred language for analysis and machine learning. I am frequently working with SQL and Git (DevOps or Github), and have experience with cloud computing such as AWS, Azure, and Databricks.\nOutside of work, I am the proud father of two tiny humans and an avid Tottenham Hotspur fan. I previously worked in public policy/public relations, and spent a few years in the Army*.\n*Fun fact, you run and workout a LOT less when no one is yelling at you to do so."
  }
]