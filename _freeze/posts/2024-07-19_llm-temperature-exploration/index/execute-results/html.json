{
  "hash": "52097b216a09ca2c22dc10dee730b850",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Setting the tone: Exploring LLM Temperature Settings with Taylor Swift's Songs\"\ndescription: \"After a few conversations around the non-deterministic nature of Large Language Models (LLMs), I realized I had not explored the impact of temperature settings on LLM responses. So it was time for some exploration into Taylor Swift songs, of course.\"\ndate: \"2024-07-19\"\ncategories: [Python, R, ggplot, OpenAI, LLMs]\nimage: \"gpt-4o.png\"\n\n---\n\n\n## Temperature settings for LLMs, what's the deal?\n\nAdjusting the temperature setting in large language models (LLMs) is essentially adjusting the creativity dial of the output. When the temperature is set low, the LLM produces more predictable and consistent responses, similar to how a careful and precise person might answer questions.  On the other hand, when the temperature is set high, the LLMs become more imaginative and varied in its responses, similiar to a brainstorming session where all ideas are welcome. \n\nImagine you ask an LLM to complete the following sentence:\n\n> The cow jumped over the ...\n\nWith a lower temperature setting, you will probably get moon every time, even if you ask the question a 1,000 times. However, as you increase the temperature setting, you will still get moon many times but also fence, car, or other answers.\n\nWhen using LLMs at work, it is important to understand how the temperature setting impacts the responses. If you are summarizing a document multiple times (perhaps a batch process every night), users might be confused if each day a drastically different summary is presented to them. Conversely, if you are using an LLM to help generate emails or other creative content, you might want to increase the temperature setting to get more varied responses.\n\nAs I increase my use Azure OpenAI services at work, these types of discussions are becoming more frequent and nuanced.  This is different from when I explore using LLMs for personal projects that are more focused on creativity and exploration.  \n\n I wanted to dig into temperature settings and see how they impact the responses of LLMs in more detail.  Fortunately, I knew a perfect use case to test.\n\n\n\n## Using LLMs to explore Taylor Swift's music\n\nI asked different LLMs to tell me the best Taylor Swift song and see how adjusting the temperature setting changed the output.\n\nFirst, I used Python to access one of OpenAI's latest models, gpt-4o. I asked the LLM to tell me the best Taylor Swift song. I then ran the model  at different temperature settings, ranging from 0 to 2, 200 times for each setting.  My specific ask was:\n\n> Tell me the best Taylor Swift song?\n\nI also gave the model additional instructions:\n\n> You are a helpful assistant. When I ask a question, I am looking for a very short answer. Preferably one to four words, with no introduction and simply giving an answer.  I do not want answers longer than 4 words.\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\nfrom secret_keys import GPT_KEY\nimport pandas as pd\nfrom openai import OpenAI\nimport time\n\n\nclient = OpenAI(api_key=GPT_KEY)\n\n# helper function to get completions from OpenAI and batch process\ndef openai_completion(temp, system_prompt, user_prompt, model):\n    try:\n        completion = client.chat.completions.create(\n            model=model,\n            temperature=temp,\n            messages=[\n                {\"role\": \"system\", \"content\": system_prompt},\n                {\"role\": \"user\", \"content\": user_prompt}\n            ]\n        )\n\n        return completion.choices[0].message.content\n    except Exception as e:\n        return f\"error - {str(e)}\"\n\n\ndef run_batch_completions(temp, system_prompt, user_prompt, model, num_responses):\n    responses = []\n    for _ in range(num_responses):\n        response = openai_completion(temp, system_prompt, user_prompt, model)\n        responses.append(response)\n    return pd.Series(responses)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\nsys_prompt=\"You are a helpful assistant. When I ask a question, I am looking for a very short answer. Preferably one to four words, with no introduction and simply giving an answer.  I do not want answers longer than 4 words.\"\n\nprompt='Tell me the best Taylor Swift song?\n\nmodel = 'gpt-4o'\ntimes = 200\n\ntemp_values = [0, 0.66, 1.23, 2] \noutputs = {}\n\nfor x in temp_values:\n    outputs[f'temperature_{x}'] = run_batch_completions(x, prompt, sys_prompt, model, times)\n    # Pause for 60 seconds to avoid rate limit issues\n    time.sleep(60)\n\n\n\n# Convert the dictionary to a DataFrame\ndf = pd.DataFrame(outputs)\n\n# Write the DataFrame to a CSV file\ndf.to_csv('best_song.csv', index=False)\n```\n:::\n\n\nFrom there, I collected the responses and used R and `{ggplot}`to analyze the data. I wanted to see how the temperature settings impacted the responses.  As expected, at lower temperature settings the responses were more consistent.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\nlibrary(ggplot2) \nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tayloRswift)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(scales)\n\n#df <- read.csv('posts/2024-06-19_llm-temperature-exploration/best_song.csv')\ndf <- read.csv('./best_song.csv')\n\n\n# Aggregate data to count unique values for each temperature\ndf_temperature_count <- df %>%\n  mutate(across(everything(), ~gsub(\"[[:punct:]]\", \"\", .))) %>%\n  mutate(across(everything(), ~gsub(\"\\n\", \"\", .))) %>%\n  pivot_longer(everything(), names_to = \"Temperature\", values_to = \"Song\")  %>%\n  group_by(Temperature, Song) %>%\n  summarise(Count = n(), Percent = (Count / 200) * 100, .groups='drop')\n#\n\n# Create a bar chart\n\n# create labels for when there are enough respones\ndf_temperature_count <- df_temperature_count %>%\n  mutate(Label = ifelse(Count > 5, as.character(Song), \"\"))\n\np <- ggplot(df_temperature_count, aes(x = Temperature, y = Percent, fill = fct_reorder2(Song, Percent,Temperature))) +\n    geom_bar(stat= 'identity') +\n    geom_text(aes(label = Label), position = position_stack(vjust = 0.5), check_overlap = FALSE, angle=90) +\n    theme_economist() +\n    scale_fill_manual(values = c('#b8396b', '#ffd1d7', '#fff5cc', '#76bae0', '#b28f81', '#54483e'), guide = 'none') +\n    labs(x = \"\", \n         y = \"How often was a song identified (over 200 answers)\", \n         title = 'gpt-4o, tell me which Taylor Swift song is the \"best\"?',\n         #subtitle = 'When instructed to be less creative (meaning a lower temperature setting), the LLM responded more consistently.\\nAt the lowest creative setting (temperature of 0), the model answered \"All Too Well\"  for all 200 responses.',\n         caption = \"Chart colors inspired by the Lover album\") +\n    coord_flip() +\n    scale_x_discrete(labels = c(\"temperature_0\" = \"Lowest Creativity\", \n                                \"temperature_0.66\" = \"Low Creativity\", \n                                \"temperature_1.23\" = \"High Creativity\"),\n                     limits = c(\"temperature_1.23\", \"temperature_0.66\", \"temperature_0\")) +\n    scale_y_continuous(breaks = seq(0, 100, by = 10), labels = label_percent(scale = 1)) +\n    theme(axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0))) \n\nggsave(\"gpt-4o.png\", plot = p, width = 13, height = 8, units = \"in\", dpi = 300)\n```\n:::\n\n\n\n![](gpt-4o.png)\n\n\nI then looked at what were some of the most common responses at each temperature setting.\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\n# Convert all columns to rows\ndf_gt <- df %>%\n    mutate(across(everything(), ~gsub(\"[[:punct:]]\", \"\", .))) %>%\n    pivot_longer( cols = everything(), names_to = \"Column\", values_to = \"Value\") %>%\n    count(Column, Value)  %>%\n    arrange(desc(n))  %>%\n    group_by(Column) %>%\n    slice_max(n, n = 4) %>%\n    mutate(percent_of_n = round(n / sum(n), 3)) %>%\n    ungroup() \n\n\n\ndf_gt %>%\n    mutate(Column = case_when(\n        Column == 'temperature_0' ~ 'Lowest Creativity',\n        Column == 'temperature_0.66' ~ 'Low Creativity',\n        Column == 'temperature_1.23' ~ 'High Creativity')\n    ) %>%\n     gt(\n        rowname_col = \"Value\",\n        groupname_col = \"Column\"\n    )  %>%\n    tab_header( title = \"gpt-4o - Best Taylor Swift Song by temperature setting\") %>%\n    cols_width(\n        Column ~ pct(30), # Set the width of the \"Column\" column to 25%\n        Value ~ pct(30), # Set the width of the \"Value\" column to 35%\n        n ~ pct(20), # Set the width of the \"n\" column to 20%\n        percent_of_n ~ pct(20) # Set the width of the \"percent_of_n\" column to 20%\n    ) %>%\n    fmt_percent(\n        columns = vars(percent_of_n),\n        decimals = 1 # Adjust the number of decimal places as needed\n    )  %>%\n    cols_label(\n        Column = \"Temperature Setting\",\n        Value = \"Song\",\n        n = \"Times model picked song\",\n        percent_of_n = \"% of times picked\"\n    )  %>%\n     tab_options(\n        row.striping.include_table_body = FALSE,\n        row_group.font.weight = \"bolder\",\n    )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"bhdpgbkvyp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#bhdpgbkvyp table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#bhdpgbkvyp thead, #bhdpgbkvyp tbody, #bhdpgbkvyp tfoot, #bhdpgbkvyp tr, #bhdpgbkvyp td, #bhdpgbkvyp th {\n  border-style: none;\n}\n\n#bhdpgbkvyp p {\n  margin: 0;\n  padding: 0;\n}\n\n#bhdpgbkvyp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#bhdpgbkvyp .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#bhdpgbkvyp .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#bhdpgbkvyp .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#bhdpgbkvyp .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#bhdpgbkvyp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#bhdpgbkvyp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#bhdpgbkvyp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#bhdpgbkvyp .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#bhdpgbkvyp .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#bhdpgbkvyp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bolder;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#bhdpgbkvyp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#bhdpgbkvyp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#bhdpgbkvyp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#bhdpgbkvyp .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhdpgbkvyp .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#bhdpgbkvyp .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#bhdpgbkvyp .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#bhdpgbkvyp .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhdpgbkvyp .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#bhdpgbkvyp .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhdpgbkvyp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#bhdpgbkvyp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhdpgbkvyp .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bhdpgbkvyp .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhdpgbkvyp .gt_left {\n  text-align: left;\n}\n\n#bhdpgbkvyp .gt_center {\n  text-align: center;\n}\n\n#bhdpgbkvyp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#bhdpgbkvyp .gt_font_normal {\n  font-weight: normal;\n}\n\n#bhdpgbkvyp .gt_font_bold {\n  font-weight: bold;\n}\n\n#bhdpgbkvyp .gt_font_italic {\n  font-style: italic;\n}\n\n#bhdpgbkvyp .gt_super {\n  font-size: 65%;\n}\n\n#bhdpgbkvyp .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#bhdpgbkvyp .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#bhdpgbkvyp .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#bhdpgbkvyp .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#bhdpgbkvyp .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#bhdpgbkvyp .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#bhdpgbkvyp .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;; width: 100%\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:20%;\"/>\n    <col style=\"width:20%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>gpt-4o - Best Taylor Swift Song by temperature setting</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Times model picked song\">Times model picked song</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"% of times picked\">% of times picked</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Lowest Creativity\">Lowest Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"Lowest Creativity stub_1_1 n\" class=\"gt_row gt_right\">200</td>\n<td headers=\"Lowest Creativity stub_1_1 percent_of_n\" class=\"gt_row gt_right\">100.0%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Low Creativity\">Low Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"Low Creativity stub_1_2 n\" class=\"gt_row gt_right\">199</td>\n<td headers=\"Low Creativity stub_1_2 percent_of_n\" class=\"gt_row gt_right\">99.5%</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Blank Space</th>\n<td headers=\"Low Creativity stub_1_3 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Low Creativity stub_1_3 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"High Creativity\">High Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"High Creativity stub_1_4 n\" class=\"gt_row gt_right\">174</td>\n<td headers=\"High Creativity stub_1_4 percent_of_n\" class=\"gt_row gt_right\">87.4%</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Blank Space</th>\n<td headers=\"High Creativity stub_1_5 n\" class=\"gt_row gt_right\">13</td>\n<td headers=\"High Creativity stub_1_5 percent_of_n\" class=\"gt_row gt_right\">6.5%</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Love Story</th>\n<td headers=\"High Creativity stub_1_6 n\" class=\"gt_row gt_right\">8</td>\n<td headers=\"High Creativity stub_1_6 percent_of_n\" class=\"gt_row gt_right\">4.0%</td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well\n</th>\n<td headers=\"High Creativity stub_1_7 n\" class=\"gt_row gt_right\">2</td>\n<td headers=\"High Creativity stub_1_7 percent_of_n\" class=\"gt_row gt_right\">1.0%</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Shake It Off</th>\n<td headers=\"High Creativity stub_1_8 n\" class=\"gt_row gt_right\">2</td>\n<td headers=\"High Creativity stub_1_8 percent_of_n\" class=\"gt_row gt_right\">1.0%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nAt the lowest setting, the model returned the exact same response for all 200 completions.  As the temperature setting increased, the number of unique responses increased.  I was surprised at the response of `All Too well` being the best song given I wasn't too familiar with that song, but after some informal research  (asking my wife and friends)realized it was critically acclaimed when it was re-released as a 10-minute version.\n\nUsing this latest model as a baseline, I wanted to see how different models might respond to the same question.\n\n\n## First follow up test: Asking an older model for the best Taylor Swift song\n\nI next asked an \"older\" model version the same question.  For this, I used GPT-3.5 Turbo which released in March 2023 and trained on data up to September 2021.\n\n\n\n::: {.cell}\n\n```{.python .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\nmodel = 'gpt-3.5-turbo'\ntimes = 200\n\ntemp_values = [2, 1.98] \noutputs = {}\n\nfor x in temp_values:\n    outputs[f'temperature_{x}'] = run_batch_completions(x, prompt, sys_prompt, model, times)\n\n    # Pause for 60 seconds to avoid rate limit issues\n    time.sleep(120)\n\n\n# Convert the dictionary to a DataFrame\ndf = pd.DataFrame(outputs)\n\n# Write the DataFrame to a CSV file\ndf.to_csv('best_song_35turbo.csv', index=False)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\n#df <- read.csv('posts/2024-06-19_llm-temperature-exploration/best_song_35turbo.csv')\ndf <- read.csv('./best_song_35turbo.csv')\n\n# Aggregate data to count unique values for each temperature\ndf_temperature_count <- df %>%\n  mutate(across(everything(), ~gsub(\"[[:punct:]]\", \"\", .))) %>%\n  mutate(across(everything(), ~gsub(\"\\n\", \"\", .))) %>%\n  pivot_longer(everything(), names_to = \"Temperature\", values_to = \"Song\")  %>%\n  group_by(Temperature, Song) %>%\n  summarise(Count = n(), Percent = (Count / 200) * 100, .groups='drop')\n\n\n\n# Create a bar chart\ndf_temperature_count <- df_temperature_count %>%\n  mutate(Label = ifelse(Count > 2, as.character(Song), \"\")) %>%\n  mutate()\n\np <- ggplot(df_temperature_count, aes(x = Temperature, y = Percent, fill = fct_reorder2(Song, Percent,Temperature))) +\n    geom_bar(stat= 'identity') +\n    geom_text(aes(label = Label), position = position_stack(vjust = 0.5), check_overlap = FALSE, angle=90) +\n    theme_economist() +\n    scale_fill_taylor(palette = \"lover\", guide='none') +\n    #scale_fill_manual(values = c('#b8396b', '#ffd1d7', '#fff5cc', '#76bae0', '#b28f81', '#54483e'), guide = 'none') +\n    labs(x = \"\", \n         y = \"How often was a song identified (over 200 answers)\", \n         title = 'gpt-3.5 Turbo, tell me which Taylor Swift song is the \"best\"?',\n         #subtitle = 'We see the same pattern with an older model, although there is more variation at higher creativity (including one Ariana Grande song, oddly). \\nInterestingly, this model was trained on data prior to All Too Well (10 Minute version), being released. That version was critically acclaimed, \\nso perhaps that is why \"All Too Well\" was not as highly rated by this version and Love Story was?',\n         caption = \"Chart colors inspired by the Lover album\") +\n    coord_flip() +\n    scale_x_discrete(labels = c(\"temperature_0\" = \"Lowest Creativity\", \n                                \"temperature_0.66\" = \"Low Creativity\", \n                                \"temperature_1.23\" = \"High Creativity\"),\n                     limits = c(\"temperature_1.23\", \"temperature_0.66\", \"temperature_0\")) +\n    scale_y_continuous(breaks = seq(0, 100, by = 10), labels = label_percent(scale = 1)) +\n    theme(axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0))) \n\nggsave(\"gpt-3.5-turbo.png\", plot = p, width = 13, height = 8, units = \"in\", dpi = 300)\n```\n:::\n\n\n![](gpt-3.5-turbo.png)\n\n\nI immediately saw this model had more variation, including an odd response of `No Tears Left to Cry  by Ariana Grande` as the best Taylor Swift song (yes, the response included saying it was an Ariana Grande song).   I again looked at the most common responses at each temperature setting.\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\n# Convert all columns to rows\ndf_gt <- df %>%\n    mutate(across(everything(), ~gsub(\"[[:punct:]]\", \"\", .))) %>%\n    pivot_longer( cols = everything(), names_to = \"Column\", values_to = \"Value\") %>%\n    count(Column, Value)  %>%\n    arrange(desc(n))  %>%\n    group_by(Column) %>%\n    #slice_max(n, n = 4) %>%\n    mutate(percent_of_n = round(n / sum(n), 3)) %>%\n    ungroup() \n\n\n\ndf_gt %>%\n     mutate(Column = case_when(\n        Column == 'temperature_0' ~ 'Lowest Creativity',\n        Column == 'temperature_0.66' ~ 'Low Creativity',\n        Column == 'temperature_1.23' ~ 'Medium-High Creativity')\n    ) %>%\n    gt(\n        rowname_col = \"Value\",\n        groupname_col = \"Column\"\n    )  %>%\n    tab_header( title = \"gpt-3.5 Turbo - Best Taylor Swift Song by temperature setting\") %>%\n    cols_width(\n        Column ~ pct(30), # Set the width of the \"Column\" column to 25%\n        Value ~ pct(30), # Set the width of the \"Value\" column to 35%\n        n ~ pct(20), # Set the width of the \"n\" column to 20%\n        percent_of_n ~ pct(20) # Set the width of the \"percent_of_n\" column to 20%\n    ) %>%\n    fmt_percent(\n        columns = vars(percent_of_n),\n        decimals = 1 # Adjust the number of decimal places as needed\n    )  %>%\n    cols_label(\n        Column = \"Temperature Setting\",\n        Value = \"Song\",\n        n = \"Count of Responses\",\n        percent_of_n = \"% of Responses\"\n    )  %>%\n     tab_options(\n        row.striping.include_table_body = FALSE,\n        row_group.font.weight = \"bolder\",\n    )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"gbdfdctukq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#gbdfdctukq table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#gbdfdctukq thead, #gbdfdctukq tbody, #gbdfdctukq tfoot, #gbdfdctukq tr, #gbdfdctukq td, #gbdfdctukq th {\n  border-style: none;\n}\n\n#gbdfdctukq p {\n  margin: 0;\n  padding: 0;\n}\n\n#gbdfdctukq .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#gbdfdctukq .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gbdfdctukq .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gbdfdctukq .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gbdfdctukq .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gbdfdctukq .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gbdfdctukq .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gbdfdctukq .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gbdfdctukq .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#gbdfdctukq .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#gbdfdctukq .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bolder;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#gbdfdctukq .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gbdfdctukq .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gbdfdctukq .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gbdfdctukq .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gbdfdctukq .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#gbdfdctukq .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#gbdfdctukq .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#gbdfdctukq .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gbdfdctukq .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#gbdfdctukq .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gbdfdctukq .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#gbdfdctukq .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gbdfdctukq .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gbdfdctukq .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gbdfdctukq .gt_left {\n  text-align: left;\n}\n\n#gbdfdctukq .gt_center {\n  text-align: center;\n}\n\n#gbdfdctukq .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gbdfdctukq .gt_font_normal {\n  font-weight: normal;\n}\n\n#gbdfdctukq .gt_font_bold {\n  font-weight: bold;\n}\n\n#gbdfdctukq .gt_font_italic {\n  font-style: italic;\n}\n\n#gbdfdctukq .gt_super {\n  font-size: 65%;\n}\n\n#gbdfdctukq .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#gbdfdctukq .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#gbdfdctukq .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#gbdfdctukq .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#gbdfdctukq .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#gbdfdctukq .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#gbdfdctukq .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;; width: 100%\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:20%;\"/>\n    <col style=\"width:20%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>gpt-3.5 Turbo - Best Taylor Swift Song by temperature setting</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Count of Responses\">Count of Responses</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"% of Responses\">% of Responses</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Lowest Creativity\">Lowest Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Love Story</th>\n<td headers=\"Lowest Creativity stub_1_1 n\" class=\"gt_row gt_right\">200</td>\n<td headers=\"Lowest Creativity stub_1_1 percent_of_n\" class=\"gt_row gt_right\">100.0%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Low Creativity\">Low Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Love Story</th>\n<td headers=\"Low Creativity stub_1_2 n\" class=\"gt_row gt_right\">190</td>\n<td headers=\"Low Creativity stub_1_2 percent_of_n\" class=\"gt_row gt_right\">95.0%</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"Low Creativity stub_1_3 n\" class=\"gt_row gt_right\">5</td>\n<td headers=\"Low Creativity stub_1_3 percent_of_n\" class=\"gt_row gt_right\">2.5%</td></tr>\n    <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Blank Space</th>\n<td headers=\"Low Creativity stub_1_4 n\" class=\"gt_row gt_right\">5</td>\n<td headers=\"Low Creativity stub_1_4 percent_of_n\" class=\"gt_row gt_right\">2.5%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Medium-High Creativity\">Medium-High Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Love Story</th>\n<td headers=\"Medium-High Creativity stub_1_5 n\" class=\"gt_row gt_right\">138</td>\n<td headers=\"Medium-High Creativity stub_1_5 percent_of_n\" class=\"gt_row gt_right\">69.0%</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"Medium-High Creativity stub_1_6 n\" class=\"gt_row gt_right\">20</td>\n<td headers=\"Medium-High Creativity stub_1_6 percent_of_n\" class=\"gt_row gt_right\">10.0%</td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Blank Space</th>\n<td headers=\"Medium-High Creativity stub_1_7 n\" class=\"gt_row gt_right\">18</td>\n<td headers=\"Medium-High Creativity stub_1_7 percent_of_n\" class=\"gt_row gt_right\">9.0%</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Shake It Off</th>\n<td headers=\"Medium-High Creativity stub_1_8 n\" class=\"gt_row gt_right\">13</td>\n<td headers=\"Medium-High Creativity stub_1_8 percent_of_n\" class=\"gt_row gt_right\">6.5%</td></tr>\n    <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">I Knew You Were Trouble</th>\n<td headers=\"Medium-High Creativity stub_1_9 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_9 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">In my opinion All Too Well is the best Taylor Swift song</th>\n<td headers=\"Medium-High Creativity stub_1_10 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_10 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">No Tears Left to Cry  Ariana Grande</th>\n<td headers=\"Medium-High Creativity stub_1_11 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_11 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Opinions vary widely</th>\n<td headers=\"Medium-High Creativity stub_1_12 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_12 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Somebody To Love</th>\n<td headers=\"Medium-High Creativity stub_1_13 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_13 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Soon Youll Get Better</th>\n<td headers=\"Medium-High Creativity stub_1_14 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_14 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Thats subjective but Love Story is a popular choice</th>\n<td headers=\"Medium-High Creativity stub_1_15 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_15 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_16\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Thats subjective friend</th>\n<td headers=\"Medium-High Creativity stub_1_16 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_16 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_17\" scope=\"row\" class=\"gt_row gt_left gt_stub\">There are many options but some popular recommendations are Love Story Blank Space and Shake It Off</th>\n<td headers=\"Medium-High Creativity stub_1_17 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_17 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_18\" scope=\"row\" class=\"gt_row gt_left gt_stub\">This is subjective</th>\n<td headers=\"Medium-High Creativity stub_1_18 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_18 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n    <tr><th id=\"stub_1_19\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Wildest Dreams</th>\n<td headers=\"Medium-High Creativity stub_1_19 n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Medium-High Creativity stub_1_19 percent_of_n\" class=\"gt_row gt_right\">0.5%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nThis older model did not rate `All Too Well` as highly as the newer model.  This was interesting as the older model was trained on data up to September 2021, so it did not have access to the 10 minute version of `All Too Well` which was released in November 2021 and was critically acclaimed.  Additionally, you can clearly see this older model had some odd outputs at higher temperatures.\n\n## Second follow up test: Asking Claude's latest model what is the best Taylor Swift song\n\nI haven't used Anthropic's models that much, but I wanted to see how it's latest model would perform. \n\n\n::: {.cell}\n\n```{.python .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\nimport anthropic\nfrom secret_keys import CLAUDE_KEY\n\nclient = anthropic.Anthropic(\n    api_key=CLAUDE_KEY,\n)\n\n\ndef claude_completion(temp):\n    try:\n        message = client.messages.create(\n            model=\"claude-3-5-sonnet-20240620\",\n            max_tokens=1024,\n            system=sys_prompt,\n            temperature=temp,\n            messages=[\n                {\"role\": \"user\", \"content\": prompt},\n            ]\n        )\n        return message.content[0].text\n    except Exception as e:\n        return f\"error - {str(e)}\"\n\ndef claude_batch_completions(temp, num_responses):\n    responses = []\n    for _ in range(num_responses):\n        response = claude_completion(temp)\n        responses.append(response)\n    return pd.Series(responses)\n\ntimes = 200\n\ntemp_values = [0, 0.33, 0.66, 1]\noutputs = {}\n\nfor x in temp_values:\n    print('starting' + str(x))\n    outputs[f'temperature_{x}'] = claude_batch_completions(x, times)\n    # Pause for 60 seconds to avoid rate limit issues\n    print('sleeping')\n    time.sleep(60)\n\n\n# Convert the dictionary to a DataFrame\ndf = pd.DataFrame(outputs)\n\n# Write the DataFrame to a CSV file\ndf.to_csv('best_song_claude.csv', index=False)\n```\n:::\n\n\n Immediately what stood out was this model was able to produce valid results at all temperatures. I didn't mention it, but the gpt models all hallucinated at the highest temperature setting that I had to throw out the results.  These answer weren't just wrong (like listing an Arianna Grande song), but they were nonsensical. Some include json formatted data, foreign languages, and other oddities.  Claude returned valid responses at all temperatures.\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\n#df <- read.csv('posts/2024-06-19_llm-temperature-exploration/best_song_claude.csv')\ndf <- read.csv('./best_song_claude.csv')\n\n\n# Aggregate data to count unique values for each temperature\ndf_temperature_count <- df %>%\n  mutate(across(everything(), ~gsub(\"[[:punct:]]\", \"\", .))) %>%\n  mutate(across(everything(), ~gsub(\"\\n\", \"\", .))) %>%\n  pivot_longer(everything(), names_to = \"Temperature\", values_to = \"Song\")  %>%\n  group_by(Temperature, Song) %>%\n  summarise(Count = n(), Percent = (Count / 200) * 100, .groups='drop')\n#\n\n# Create a bar chart\ndf_temperature_count <- df_temperature_count %>%\n  mutate(Label = ifelse(Count > 2, as.character(Song), \"\"))\n  \np <- ggplot(df_temperature_count, aes(x = Temperature, y = Percent, fill = Song)) +\n    geom_bar(stat = \"identity\") +\n    geom_text(aes(label = Label), position = position_stack(vjust = 0.5), check_overlap = FALSE, angle=90) +\n    theme_economist() +\n    #scale_fill_taylor(palette = \"taylor1989\", guide='none') +\n    scale_fill_manual(values = c('#b8396b', '#ffd1d7', '#fff5cc', '#76bae0', '#b28f81', '#54483e'), guide = 'none') +\n    labs(x = \"\", \n         y = \"How often was a song identified (over 200 answers)\", \n         title = 'Claude Sonnet, which Taylor Swift song is the \"best\"?',\n         #subtitle = 'We see the same pattern with this latest model from Anthropic, although it identified \"Shake it Off\" as the \"best\". \\nThis model was trained on data up to 2024, so it is a timely reminder that different models can have access to similar data but\\narrive at different conclusions based on how they are built and the impact of the language we use with LLMs (in this case, what does the best mean?).',\n         caption = \"Chart colors inspired by the Lover album\") +\n    coord_flip() + \n    scale_x_discrete(labels = c(\"temperature_0\" = \"Lowest Creativity\", \n                                \"temperature_0.33\" = \"Low-MediumCreativity\", \n                                \"temperature_0.66\" = \"Medium-High Creativity\",\n                                \"temperature_1\" = \"Highest Creativity\"),\n                     limits = c(\"temperature_1\", \"temperature_0.66\", 'temperature_0.33',\"temperature_0\")) +\n    theme(axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0))) \n\nggsave(\"claude.png\", plot = p, width = 13, height = 8, units = \"in\", dpi = 300)\n```\n:::\n\n\n![](claude.png)\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-fold=\"true\" code-summary=\"hide / show code\"}\n# Convert all columns to rows\ndf_gt <- df %>%\n    mutate(across(everything(), ~gsub(\"[[:punct:]]\", \"\", .))) %>%\n    pivot_longer( cols = everything(), names_to = \"Column\", values_to = \"Value\") %>%\n    count(Column, Value)  %>%\n    arrange(desc(n))  %>%\n    group_by(Column) %>%\n    slice_max(n, n = 4) %>%\n    mutate(percent_of_n = round(n / sum(n), 3)) %>%\n    ungroup() \n\n\n\ndf_gt %>%\n    mutate(Column = case_when(\n        Column == \"temperature_0\" ~ \"Lowest_Creativity\",\n        Column == \"temperature_0.33\" ~ \"Low_MediumCreativity\",\n        Column == \"temperature_0.66\" ~ \"Medium_High_Creativity\",\n        Column == \"temperature_1\" ~ \"Highest_Creativity\")\n        ) %>%\n     gt(\n        rowname_col = \"Value\",\n        groupname_col = \"Column\"\n    )  %>%\n    tab_header( title = \"Claude Sonnet - Best Taylor Swift Song by temperature setting\") %>%\n    cols_width(\n        Column ~ pct(30), # Set the width of the \"Column\" column to 25%\n        Value ~ pct(30), # Set the width of the \"Value\" column to 35%\n        n ~ pct(20), # Set the width of the \"n\" column to 20%\n        percent_of_n ~ pct(20) # Set the width of the \"percent_of_n\" column to 20%\n    ) %>%\n    fmt_percent(\n        columns = vars(percent_of_n),\n        decimals = 1 # Adjust the number of decimal places as needed\n    )  %>%\n    cols_label(\n        Column = \"Temperature Setting\",\n        Value = \"Song\",\n        n = \"Count of Responses\",\n        percent_of_n = \"% of Responses\"\n    )  %>%\n     tab_options(\n        row.striping.include_table_body = FALSE,\n        row_group.font.weight = \"bolder\",\n    )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"luekyaftgc\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#luekyaftgc table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#luekyaftgc thead, #luekyaftgc tbody, #luekyaftgc tfoot, #luekyaftgc tr, #luekyaftgc td, #luekyaftgc th {\n  border-style: none;\n}\n\n#luekyaftgc p {\n  margin: 0;\n  padding: 0;\n}\n\n#luekyaftgc .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#luekyaftgc .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#luekyaftgc .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#luekyaftgc .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#luekyaftgc .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#luekyaftgc .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#luekyaftgc .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#luekyaftgc .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#luekyaftgc .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#luekyaftgc .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#luekyaftgc .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bolder;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#luekyaftgc .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#luekyaftgc .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#luekyaftgc .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#luekyaftgc .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#luekyaftgc .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#luekyaftgc .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#luekyaftgc .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#luekyaftgc .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#luekyaftgc .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#luekyaftgc .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#luekyaftgc .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#luekyaftgc .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#luekyaftgc .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#luekyaftgc .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#luekyaftgc .gt_left {\n  text-align: left;\n}\n\n#luekyaftgc .gt_center {\n  text-align: center;\n}\n\n#luekyaftgc .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#luekyaftgc .gt_font_normal {\n  font-weight: normal;\n}\n\n#luekyaftgc .gt_font_bold {\n  font-weight: bold;\n}\n\n#luekyaftgc .gt_font_italic {\n  font-style: italic;\n}\n\n#luekyaftgc .gt_super {\n  font-size: 65%;\n}\n\n#luekyaftgc .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#luekyaftgc .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#luekyaftgc .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#luekyaftgc .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#luekyaftgc .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#luekyaftgc .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#luekyaftgc .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;; width: 100%\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:20%;\"/>\n    <col style=\"width:20%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Claude Sonnet - Best Taylor Swift Song by temperature setting</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Count of Responses\">Count of Responses</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"% of Responses\">% of Responses</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Lowest_Creativity\">Lowest_Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Shake It Off</th>\n<td headers=\"Lowest_Creativity stub_1_1 n\" class=\"gt_row gt_right\">200</td>\n<td headers=\"Lowest_Creativity stub_1_1 percent_of_n\" class=\"gt_row gt_right\">100.0%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Low_MediumCreativity\">Low_MediumCreativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Shake It Off</th>\n<td headers=\"Low_MediumCreativity stub_1_2 n\" class=\"gt_row gt_right\">184</td>\n<td headers=\"Low_MediumCreativity stub_1_2 percent_of_n\" class=\"gt_row gt_right\">92.0%</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"Low_MediumCreativity stub_1_3 n\" class=\"gt_row gt_right\">12</td>\n<td headers=\"Low_MediumCreativity stub_1_3 percent_of_n\" class=\"gt_row gt_right\">6.0%</td></tr>\n    <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Blank Space</th>\n<td headers=\"Low_MediumCreativity stub_1_4 n\" class=\"gt_row gt_right\">4</td>\n<td headers=\"Low_MediumCreativity stub_1_4 percent_of_n\" class=\"gt_row gt_right\">2.0%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Medium_High_Creativity\">Medium_High_Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Shake It Off</th>\n<td headers=\"Medium_High_Creativity stub_1_5 n\" class=\"gt_row gt_right\">130</td>\n<td headers=\"Medium_High_Creativity stub_1_5 percent_of_n\" class=\"gt_row gt_right\">65.0%</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"Medium_High_Creativity stub_1_6 n\" class=\"gt_row gt_right\">49</td>\n<td headers=\"Medium_High_Creativity stub_1_6 percent_of_n\" class=\"gt_row gt_right\">24.5%</td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Blank Space</th>\n<td headers=\"Medium_High_Creativity stub_1_7 n\" class=\"gt_row gt_right\">17</td>\n<td headers=\"Medium_High_Creativity stub_1_7 percent_of_n\" class=\"gt_row gt_right\">8.5%</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Cruel Summer</th>\n<td headers=\"Medium_High_Creativity stub_1_8 n\" class=\"gt_row gt_right\">4</td>\n<td headers=\"Medium_High_Creativity stub_1_8 percent_of_n\" class=\"gt_row gt_right\">2.0%</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Highest_Creativity\">Highest_Creativity</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Shake It Off</th>\n<td headers=\"Highest_Creativity stub_1_9 n\" class=\"gt_row gt_right\">96</td>\n<td headers=\"Highest_Creativity stub_1_9 percent_of_n\" class=\"gt_row gt_right\">48.5%</td></tr>\n    <tr><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">All Too Well</th>\n<td headers=\"Highest_Creativity stub_1_10 n\" class=\"gt_row gt_right\">59</td>\n<td headers=\"Highest_Creativity stub_1_10 percent_of_n\" class=\"gt_row gt_right\">29.8%</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Blank Space</th>\n<td headers=\"Highest_Creativity stub_1_11 n\" class=\"gt_row gt_right\">33</td>\n<td headers=\"Highest_Creativity stub_1_11 percent_of_n\" class=\"gt_row gt_right\">16.7%</td></tr>\n    <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Cruel Summer</th>\n<td headers=\"Highest_Creativity stub_1_12 n\" class=\"gt_row gt_right\">10</td>\n<td headers=\"Highest_Creativity stub_1_12 percent_of_n\" class=\"gt_row gt_right\">5.1%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## Conclusion\n\nThis was far from a scientific approach, but it did help me better understand how temperature impacts **short** LLM responses. For a future post, I want to try this again but look at how the responses vary with longer answers.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}